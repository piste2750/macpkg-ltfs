######################################################################################
##
##  %Z% %I% %W% %G% %U%
##
##  ZZ_Copyright_BEGIN
##
##
##  Licensed Materials - Property of IBM
##
##  IBM Linear Tape File System Single Drive Edition Version 2.2.1 for Linux and Mac OS X
##
##  Copyright IBM Corp. 2010, 2016
##
##  This file is part of the IBM Linear Tape File System Single Drive Edition for Linux and Mac OS X
##  (formally known as IBM Linear Tape File System)
##
##  The IBM Linear Tape File System Single Drive Edition for Linux and Mac OS X is free software;
##  you can redistribute it and/or modify it under the terms of the GNU Lesser
##  General Public License as published by the Free Software Foundation,
##  version 2.1 of the License.
##
##  The IBM Linear Tape File System Single Drive Edition for Linux and Mac OS X is distributed in the
##  hope that it will be useful, but WITHOUT ANY WARRANTY; without even the
##  implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
##  See the GNU Lesser General Public License for more details.
##
##  You should have received a copy of the GNU Lesser General Public
##  License along with this library; if not, write to the Free Software
##  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
##  or download the license from <http://www.gnu.org/licenses/>.
##
##
##  ZZ_Copyright_END
##
######################################################################################
##
## COMPONENT NAME:  IBM Linear Tape File System
##
## FILE NAME:       Makefile.osx
##
## DESCRIPTION:     Makefile for OSX implementation of LTFS.
##
## AUTHOR:          Michael A. Richmond
##                  IBM Almaden Research Center
##                  mar@almaden.ibm.com
##
##                  Atsushi Abe
##                  IBM Tokyo Lab., Japan
##                  piste@jp.ibm.com
##
######################################################################################

# LTFS version
LTFS_VERSION = 2.4.0

# Installation prefix
PREFIX = /Library/Frameworks/LTFS.framework/Versions/Current/usr

PKG_CONFIG = pkg-config
ifeq ($(shell uname -s),Darwin)
    # Muck about with pkg-config to play nice in Eclipse on OS X.
    PKG_CONFIG =/sw/bin/pkg-config
    export PKG_CONFIG_PATH =/sw/lib/pkgconfig:/usr/local/lib/pkgconfig
endif

## Debug setting
#DEBUG = -DDEBUG -DOSX_TRACE
DEBUG = -DDEBUG
#DEBUG =

## Generic compiler settings
CC = clang
CFLAGS	= $(DEBUG) -Iltfs/src -Wall -g -DLTFS_BASE_DIR=\"\" -DSUPPORT_BUGGY_IF -I ltfs/src/tape_drivers
LDFLAGS = -L/usr/local/lib

## Add platform settings
CFLAGS  += -D_GNU_SOURCE -D__APPLE_MAKEFILE__

ifeq ($(shell uname -s),Darwin)
	FRAMEWORKS = -framework IOKit -framework CoreFoundation -framework ICU
	CFLAGS	+= -Wno-unused-label
	LDFLAGS += $(FRAMEWORKS)
endif

ifeq (x$(PLATFORM),x)
	ifeq ($(shell uname -s),Darwin)
		PLATFORM = osx
	else
		PLATFORM = linux
		PLATFORM = file
	endif
endif

CFLAGS += -D$(PLATFORM)_PLATFORM

## Add configuration settings
CFLAGS  += -DLTFS_CONFIG_FILE="\"${CONFDIR}/ltfs.conf\""

ifeq ($(shell uname -r | sed 's/^\(.*\)\..*\..*/\1/'), 9)
	## Use smaller stat structure for Leopard
	ifeq (x$(FUSE),xMACFUSE)
		CFLAGS  += -I/usr/local/include/fuse -D__FreeBSD__=10 -D_FILE_OFFSET_BITS=64 -mmacosx-version-min=10.5 -arch x86_64 -I /Library/Frameworks/ICU.framework/Headers
		LDFLAGS += -L/usr/local/lib -pthread -lfuse_ino32 -liconv -arch x86_64
	else
		CFLAGS  += -I/usr/local/include/osxfuse/fuse -D__FreeBSD__=10 -D_FILE_OFFSET_BITS=64 -mmacosx-version-min=10.5 -arch x86_64 -I /Library/Frameworks/ICU.framework/Headers
		LDFLAGS += -L/usr/local/lib -pthread -losxfuse_i32 -liconv -arch x86_64
	endif
else
	## Use larger stat structure for Snow Leopard or later
	ifeq (x$(FUSE),xMACFUSE)
		CFLAGS  += -I/usr/local/include/fuse -D__FreeBSD__=10 -D_FILE_OFFSET_BITS=64 -D_DARWIN_USE_64_BIT_INODE -mmacosx-version-min=10.6 -arch x86_64 -I /Library/Frameworks/ICU.framework/Headers
		LDFLAGS += -L/usr/local/lib -pthread -lfuse_ino64 -liconv -mmacosx-version-min=10.6 -arch x86_64
	else
		CFLAGS  += -I/usr/local/include/osxfuse/fuse -D__FreeBSD__=10 -D_FILE_OFFSET_BITS=64 -D_DARWIN_USE_64_BIT_INODE -mmacosx-version-min=10.6 -arch x86_64 -I /Library/Frameworks/ICU.framework/Headers
		LDFLAGS += -L/usr/local/lib -pthread -losxfuse_i64 -liconv -mmacosx-version-min=10.6 -arch x86_64
	endif
endif

## Add libxml2 dependencies
CFLAGS += -I/usr/include/libxml2
LDFLAGS += -L/usr/lib -lxml2 -lpthread -lz -lm

DYLDFLAGS = -dynamiclib

#############################################################################

COMMON_OBJS   =	ltfs/src/libltfs/base64.o \
				ltfs/src/libltfs/config_file.o \
				ltfs/src/libltfs/dcache.o \
				ltfs/src/libltfs/fs.o \
				ltfs/src/libltfs/index_criteria.o \
				ltfs/src/libltfs/iosched.o \
				ltfs/src/libltfs/kmi.o \
				ltfs/src/libltfs/label.o \
				ltfs/src/libltfs/ltfs.o \
				ltfs/src/libltfs/ltfs_fsops.o \
				ltfs/src/libltfs/ltfs_fsops_raw.o \
				ltfs/src/libltfs/ltfs_internal.o \
				ltfs/src/libltfs/ltfslogging.o \
				ltfs/src/libltfs/ltfssnmp.o \
				ltfs/src/libltfs/pathname.o \
				ltfs/src/libltfs/periodic_sync.o \
				ltfs/src/libltfs/plugin.o \
				ltfs/src/libltfs/tape.o \
				ltfs/src/libltfs/xattr.o \
				ltfs/src/libltfs/xml_common.o \
				ltfs/src/libltfs/xml_reader.o \
				ltfs/src/libltfs/xml_writer.o \
				ltfs/src/libltfs/xml_reader_libltfs.o \
				ltfs/src/libltfs/xml_writer_libltfs.o \
				ltfs/src/libltfs/ltfs_thread.o \
				ltfs/src/libltfs/ltfstrace.o \
				ltfs/src/libltfs/arch/time_internal.o \
				ltfs/src/libltfs/arch/osx/osx_string.o \
				ltfs/src/libltfs/arch/uuid_internal.o \
				ltfs/src/libltfs/arch/filename_handling.o \
				ltfs/src/libltfs/arch/arch_info.o \
				ltfs/src/libltfs/arch/errormap.o

LIBLTFS_OBJS =		$(COMMON_OBJS) ltfs/messages/libltfs_dat.o ltfs/messages/internal_error_dat.o ltfs/messages/tape_common_dat.o

LIBUNIFIED_OBJS =	ltfs/src/iosched/unified.o ltfs/src/iosched/cache_manager.o ltfs/messages/iosched_unified_dat.o

LIBFCFS_OBJS =		ltfs/src/iosched/fcfs.o ltfs/messages/iosched_fcfs_dat.o

LIBFLATFILE_OBJS =	ltfs/src/kmi/flatfile.o ltfs/src/kmi/key_format_ltfs.o ltfs/messages/kmi_flatfile_dat.o

LIBSIMPLE_OBJS =	ltfs/src/kmi/simple.o ltfs/src/kmi/key_format_ltfs.o ltfs/messages/kmi_simple_dat.o

LIBFILE_OBJS     =	ltfs/src/tape_drivers/generic/file/filedebug_tc.o \
					ltfs/src/tape_drivers/generic/file/filedebug_conf_tc.o \
					ltfs/src/tape_drivers/ibm_tape.o \
					ltfs/messages/tape_generic_file_dat.o

LIBITDTIMG_OBJS =	ltfs/src/tape_drivers/generic/itdtimg/itdtimg_tc.o ltfs/messages/tape_generic_itdtimg_dat.o

LIBIOKIT_OBJS = ltfs/src/tape_drivers/osx/iokit-ibmtape/iokit_service.o  \
                ltfs/src/tape_drivers/osx/iokit-ibmtape/iokit_scsi.o     \
                ltfs/src/tape_drivers/osx/iokit-ibmtape/iokit_ibmtape.o  \
                ltfs/src/tape_drivers/ibm_tape.o                 \
                ltfs/src/tape_drivers/reed_solomon_crc.o         \
                ltfs/src/tape_drivers/crc32c_crc.o               \
                ltfs/messages/tape_iokit_ibmtape_dat.o

LTFS_OBJS     = ltfs/src/main.o ltfs/src/ltfs_fuse.o ltfs/messages/bin_ltfs_dat.o

MKFS_OBJS     = ltfs/src/utils/mkltfs.o ltfs/messages/bin_mkltfs_dat.o

FSCK_OBJS     = ltfs/src/utils/ltfsck.o ltfs/messages/bin_ltfsck_dat.o

LTFS_LIBS =	libiokit.$(LTFS_VERSION).dylib libiokit.dylib                  \
		libltfs.$(LTFS_VERSION).dylib libltfs.dylib                    \
		libiosched-unified.$(LTFS_VERSION).dylib libiosched-unified.dylib  \
		libiosched-fcfs.$(LTFS_VERSION).dylib libiosched-fcfs.dylib  \
		libkmi-flatfile.$(LTFS_VERSION).dylib libkmi-flatfile.dylib \
		libkmi-simple.$(LTFS_VERSION).dylib libkmi-simple.dylib


all: libltfs libtape-iokit libtape-file libtape-itdtimg ltfs-sde mkltfs ltfsck libiosched-unified libiosched-fcfs libkmi-flatfile libkmi-simple

ltfs-sde: $(LTFS_OBJS)
	$(CC) -std=gnu99 $(LTFS_OBJS) -o ltfs-sde $(LDFLAGS) -L. -lltfs $(foreach dir,$(LD_LIBRARY_PATH), -L$(dir))

mkltfs: $(MKFS_OBJS)
	$(CC) -std=gnu99 $(MKFS_OBJS) -o mkltfs $(LDFLAGS) -L. -lltfs $(foreach dir,$(LD_LIBRARY_PATH), -L$(dir))

ltfsck: $(FSCK_OBJS)
	$(CC) -std=gnu99 $(FSCK_OBJS) -o ltfsck $(LDFLAGS) -L. -lltfs $(foreach dir,$(LD_LIBRARY_PATH), -L$(dir))

libltfs: $(LIBLTFS_OBJS)
	$(CC) -std=gnu99 -dynamiclib $(LIBLTFS_OBJS) $(LDFLAGS) -install_name $(PREFIX)/lib/libltfs.$(LTFS_VERSION).dylib -o libltfs.$(LTFS_VERSION).dylib
	ln -fs libltfs.$(LTFS_VERSION).dylib libltfs.dylib

libtape-file: libltfs $(LIBFILE_OBJS)
	$(CC) -std=gnu99 -dynamiclib $(LIBFILE_OBJS) $(LDFLAGS) -L. -lltfs -install_name $(PREFIX)/lib/ltfs/libtape-file.$(LTFS_VERSION).dylib -o libtape-file.$(LTFS_VERSION).dylib
	ln -fs libtape-file.$(LTFS_VERSION).dylib libtape-file.dylib

libtape-itdtimg: libltfs $(LIBITDTIMG_OBJS)
	$(CC) -std=gnu99 -dynamiclib $(LIBITDTIMG_OBJS) $(LDFLAGS) -L. -lltfs -install_name $(PREFIX)/lib/ltfs/libtape-itdtimg.$(LTFS_VERSION).dylib -o libtape-itdtimg.$(LTFS_VERSION).dylib
	ln -fs libtape-itdtimg.$(LTFS_VERSION).dylib libtape-itdtimg.dylib

libtape-iokit: libltfs $(LIBIOKIT_OBJS)
	$(CC) -std=gnu99 -dynamiclib $(LIBIOKIT_OBJS) $(LDFLAGS) -L. -lltfs -install_name $(PREFIX)/lib/ltfs/libtape-iokit.$(LTFS_VERSION).dylib -o libtape-iokit.$(LTFS_VERSION).dylib
	ln -fs libtape-iokit.$(LTFS_VERSION).dylib libtape-iokit.dylib

libiosched-fcfs: libltfs $(LIBFCFS_OBJS)
	$(CC) -std=gnu99 -dynamiclib $(LIBFCFS_OBJS) $(LDFLAGS) -L. -lltfs -install_name $(PREFIX)/lib/ltfs/libiosched-fcfs.$(LTFS_VERSION).dylib -o libiosched-fcfs.$(LTFS_VERSION).dylib
	ln -fs libiosched-fcfs.$(LTFS_VERSION).dylib libiosched-fcfs.dylib

libiosched-unified: libltfs $(LIBUNIFIED_OBJS)
	$(CC) -std=gnu99 -dynamiclib $(LIBUNIFIED_OBJS) $(LDFLAGS) -L. -lltfs -install_name $(PREFIX)/lib/ltfs/libiosched-unified.$(LTFS_VERSION).dylib -o libiosched-unified.$(LTFS_VERSION).dylib
	ln -fs libiosched-unified.$(LTFS_VERSION).dylib libiosched-unified.dylib

libiosched-fcfs: libltfs $(LIBFCFS_OBJS)
	$(CC) -std=gnu99 -dynamiclib $(LIBFCFS_OBJS) $(LDFLAGS) -L. -lltfs -install_name $(PREFIX)/lib/ltfs/libiosched-fcfs.$(LTFS_VERSION).dylib -o libiosched-fcfs.$(LTFS_VERSION).dylib
	ln -fs libiosched-fcfs.$(LTFS_VERSION).dylib libiosched-fcfs.dylib

libkmi-flatfile: libltfs $(LIBFLATFILE_OBJS)
	$(CC) -std=gnu99 -dynamiclib $(LIBFLATFILE_OBJS) $(LDFLAGS) -L. -lltfs -install_name $(PREFIX)/lib/ltfs/libkmi-flatfile.$(LTFS_VERSION).dylib -o libkmi-flatfile.$(LTFS_VERSION).dylib
	ln -fs libkmi-flatfile.$(LTFS_VERSION).dylib libkmi-flatfile.dylib

libkmi-simple: libltfs $(LIBSIMPLE_OBJS)
	$(CC) -std=gnu99 -dynamiclib $(LIBSIMPLE_OBJS) $(LDFLAGS) -L. -lltfs -install_name $(PREFIX)/lib/ltfs/libkmi-simple.$(LTFS_VERSION).dylib -o libkmi-simple.$(LTFS_VERSION).dylib
	ln -fs libkmi-simple.$(LTFS_VERSION).dylib libkmi-simple.dylib

clean:
	rm -f ltfs-sde mkltfs ltfsck
	find . -name \*~      | xargs rm -f
	find . -name \*.dylib | xargs rm -f
	find . -name \*.o     | xargs rm -f

%.o: %.c *.h
	$(CC) -std=gnu99 -c -o $@ $< $(CFLAGS)

tape_drivers/reed_solomon_crc.o: tape_drivers/reed_solomon_crc.c
	$(CC) -std=gnu99 -c -o $@ $< $(CFLAGS) -O2

tape_drivers/crc32c_crc.o: tape_drivers/crc32c_crc.c
	$(CC) -std=gnu99 -c -o $@ $< $(CFLAGS) -O2 -msse4.2 -D__SSE42__ -I ../..
